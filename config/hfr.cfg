# Configuration file

bobbybreaker {
    # Whether or not BB uses exact position values or rounded ones, exact values simulate RNG due to bomb spread and highly varying damage
    B:enableFineCalc=false
}


chatfilter {
    # Enables the swear filter for chat
    B:enableChatFilter=true
}


clowder {
    # Whether chests should not be placable outside of claims
    B:disableChests=true

    # [name of the flag]:[whether it's shown in the listing]:[whether it has a tintable base]:[whether it has a static overlay]
    S:flags <
        AFR-1:true:true:true
        AFR-2EGY:true:true:true
        AFR-3PYR:true:true:true
        AFR-4:true:true:true
        AFR-5:true:true:true
        AFR-6AFRUN:true:true:true
        AFR-7ZA:true:true:true
        AFR_southafrica1994:true:true:true
        AME-10HUR:true:true:true
        AME-11ARG:true:true:true
        AME-12TEX:true:true:true
        AME-1:true:true:true
        AME-2CUBA:true:true:true
        AME-3inca:true:true:true
        AME-4VEN:true:true:true
        AME-5BR:true:true:true
        AME-6CALI:true:true:true
        AME-7CALI2:true:true:true
        AME-8MEX:true:true:true
        AME-9IRO:true:true:true
        AME-NAT1:true:true:true
        AME-NAT2:true:true:true
        AME-NAT3:true:true:true
        AME-NAT4:true:true:true
        AME-NAT6:true:true:true
        AME-NAT7:true:true:true
        ARAB-2:true:true:true
        ARAB-3:true:true:true
        ARAB-egypt:true:true:true
        ARAB-syria:true:true:true
        ARAB-:true:true:true
        ASI-10:true:true:true
        ASI-9:true:true:true
        ASI-malaysia:true:true:true
        ASI-modernindonesia:true:true:true
        ASI-modernphilippines:true:true:true
        ASI-modernsingapore:true:true:true
        ASI-modernthailand:true:true:true
        ASI-nepal:true:true:true
        ASI-nightdragon:true:true:true
        ASI-pakistan:true:true:true
        ASI-thailand1:true:true:true
        ASI-thailand2:true:true:true
        AUS-aborigineflag:true:true:true
        AUS-modernaustralia:true:true:true
        BEL-commie:true:true:true
        BEL-modernbelgium:true:true:true
        BHU-1:true:true:true
        CAN-CAN1:true:true:true
        CAN-CAN2:true:true:true
        CAN-QC:true:true:true
        CHN-1:true:true:true
        CHN-2:true:true:true
        CHN-fengtian:true:true:true
        CHN-handynasty:true:true:true
        CHN-macau:true:true:true
        CHN-mingdynasty:true:true:true
        CHN-modernhongkong:true:true:true
        CHN-prcmodern:true:true:true
        CHN-qingdynasty1:true:true:true
        CHN-qingdynasty2:true:true:true
        CHN-republicofchinaold:true:true:true
        CHN-songdynasty:true:true:true
        CHNgdynasty:true:true:true
        CHNTAI-roc:true:true:true
        CHNTIB-tibet:true:true:true
        ESP-1700:true:true:true
        ESP-modernspain:true:true:true
        EUR-altgreece:true:true:true
        EUR-altsweden:true:true:true
        EUR-austriahung:true:true:true
        EUR-austria:true:true:true
        EUR-bulgaria:true:true:true
        EUR-czech:true:true:true
        EUR-dutch1:true:true:true
        EUR-dutch2:true:true:true
        EUR-finland:true:true:true
        EUR-hapsburg:true:true:true
        EUR-holysee:true:true:true
        EUR-ireland:true:true:true
        EUR-italybad:true:true:true
        EUR-italy:true:true:true
        EUR-moderngreece:true:true:true
        EUR-modernserbia:true:true:true
        EUR-modernturkey:true:true:true
        EUR-poland:true:true:true
        EUR-roman:true:true:true
        EUR-SWE:true:true:true
        EUR-swiss:true:true:true
        EU:true:true:true
        femboyhooters:false:true:false
        FRA-1700:true:true:true
        FRA-fascist:true:true:true
        FRA-modernfrance:true:true:true
        gawr:false:true:false
        gaypride:true:true:true
        GER-communist:true:true:true
        GER-empire:true:true:true
        GER-fascist:true:true:true
        GER-hannover:true:true:true
        GER-moderngermany:true:true:true
        gigacat:false:true:false
        gigachad:false:true:false
        IND-1:true:true:true
        IND-modernindia:true:true:true
        islammoon:true:true:true
        ISR-modernisrael:true:true:true
        JAP-empire1:true:true:true
        JAP-empire2:true:true:true
        JAP-hojo:true:true:true
        JAP-modernjapan:true:true:true
        JAP-oda:true:true:true
        JAP-otomo:true:true:true
        JAP-risingmoon:true:true:true
        JAP-takeda:true:true:true
        KOR-1888:true:true:true
        KOR-3:true:true:true
        KOR-banner:true:true:true
        KOR-joseon:true:true:true
        KOR-modernnorthkorea:true:true:true
        KOR-modernsouthkorea:true:true:true
        KOR-unified1:true:true:true
        KUR-kurdsiraq:true:true:true
        KUR-kurdssyria:true:true:true
        MONG-goldenhordemongols:true:true:true
        MONG-modernmongolia:true:true:true
        nato:true:true:true
        nevergoon:false:true:false
        NOR-modernnorway:true:true:true
        northpacifictreatyorganization:true:true:true
        NZ-betternz:true:true:true
        ohio:false:true:false
        PER-iran1:true:true:true
        PER-moderniran:true:true:true
        pogs:false:true:false
        POR-1700:true:true:true
        POR-modernportugal:true:true:true
        redcross:true:true:true
        RUS-communist:true:true:true
        RUS-modernrussia:true:true:true
        scatcat:false:true:false
        spam:false:true:false
        swagminion:false:true:false
        TAI-moderntaiwanroc:true:true:true
        UK-1700:true:true:true
        UK-colonydefault:true:true:true
        UK-england:true:true:true
        UK-modernuk:true:true:true
        UK-scotland:true:true:true
        UK-wales:true:true:true
        UKJAP-britishjapan:true:true:true
        UKR-modernukraine:true:true:true
        UNFLAG:true:true:true
        USA-13:true:true:true
        USA-48:true:true:true
        USA-50:true:true:true
        usa:true:true:true
        VIET-capitalist:true:true:true
        VIET-communist:true:true:true
        warsawpact:true:true:true
        youngboy:false:true:false
        YUG-communist:true:true:true
        YUG-kingdom:true:true:true
        YUG-yugoslavia:true:true:true
     >

    # Enabling this will cause all raidability checks to be ignored, everyone will alway be raidable
    B:freeRaid=false

    # How many ticks cardboard boxes can remain loaded until rotting (5h by default)
    I:mold=360000

    # How many ticks inbetween prestige updates (1h per default)
    I:prestigeDelay=72000

    # How many chunks are checked eaach operation
    I:territoryAmount=50

    # How many ticks inbetween territory validation operations
    I:territoryDelay=5

    # How much prestige a warp point costs to create
    I:warpCost=25
}


coalgen {
    # How much RF the coal generator produces per tick
    I:coalgenProduction=200
}


coalmine {
    # Average amount of seconds for mine to have an accident
    I:accidentRate=1800

    # Average amount of seconds for mine to generate coal
    I:coalRate=60
}


derrick {
    # How much energy the derrick can store
    I:derrickBuffer=100000

    # How much energy the derrick uses per tick
    I:derrickConsumption=1000

    # How many steps a derrick can take (large numbers can crash the game)
    I:derrickLimiter=250

    # How many ticks inbetween each derrick operation (pump and drill)
    I:derrickPumpDelay=50
}


dieselgen {
    # How much RF the diesel generator produces per tick
    I:dieselProduction=1000
}


entitycontrol {
    # How far the multi-layered pathfinder for zombs and creeps reaches
    I:MLPF=100

    # Sets the maximum Y-coord where cave sickness kick in
    I:caveCap_New=-10

    # Enables advanced creeper AI
    B:creepAI=false

    # What entities should receive effects (syntax: [entity name]:[potion id]:[level, 0=I, 1=II, 2=III, etc.]:[duration])
    S:entityEffects <
        
     >

    # What entities should receive damage immunity (syntax: [entity name]:[damage source name])
    S:entityImmunity <
        
     >

    # What entities should be regulated (syntax: [entity name]:[new spawn chance])
    S:entityRestrictions <
        
     >

    # Prevents mobs from spawning underground
    B:surfaceMobs=false

    # Enables advanced zombert AI
    B:zombAI=false

    # Multiplier for mining shit
    D:zombMiningMult=1.0
}


factory {
    # How much RF a factory needs per tick to operate
    I:factoryConsumption=300

    # Average amount of seconds for actory to get jammed
    I:factoryJamRate=900

    # Average amount of seconds for factory to generate cogs
    I:factoryRate=180
}


fishing {
    # Average amount of seconds for fish in most biomes
    I:averageFishrate=60

    # Average amount of seconds for fish in hills, deserts and savannas
    I:crapFishrate=1000000

    # Average amount of seconds for fish in rivers
    I:goodFishrate=40

    # Average amount of seconds for net to get jammed
    I:jamRate=900

    # Average amount of seconds for fish in oceans
    I:superFishrate=20

    # Chance in percent of chatching whale meat
    I:whaleChance=5
}


forcefield {
    # Amount of RF per tick required for the forcefield to work
    I:fieldBaseConsumption=100

    # Duration of the base cooldown in ticks after the forcefield has been broken
    I:fieldBaseCooldown=300

    # Padding of the entity detection range (effective range is this + shield radius), may requires to be increased to detect VERY fast projectiles
    I:fieldEntityDetectionRange=25

    # Amount of RF per tick per forcefield shield upgrade
    I:fieldHealthConsumption=25

    # The HP increase per forcefield shield upgrade
    I:fieldHealthUpgradeEffect=50

    # The damage multiplier of flan's mod projectiles. 100 is the normal damage it would do to a player, 200 is double damage, etc.
    I:fieldImpactFlanMultiplier=100

    # The general multiplier of the damage equation (hitbox size ^ massExp * entity speed ^ speedExp * mult)
    I:fieldImpactMultiplier=100

    # The exponent of the projectile's mass (hitbox size) in the damage equation (200 -> ^2)
    I:fieldMassImpactExponent=200

    # Amount of RF per tick per forcefield range upgrade
    I:fieldRangeConsumption=50

    # Duration of the additional cooldown in ticks per block of radius. Standard radius is 16, the additional cooldown duraion is therefore 48 ticks, or 348 in total. Values below 5 are recommended.
    I:fieldRangeCooldown=3

    # The radius increase per forcefield range upgrade
    I:fieldRangeUpgradeEffect=16

    # The exponent of the projectile's speed in the damage equation (100 -> ^1)
    I:fieldSpeedImpactExponent=100

    # Whether or not the forcefield should use a special function to pull the damage value out of flan's mod projectiles. Utilizes the worst code and the shittiest programming techniques in the universe, but flan's bullets may not behave as expected if this option is turned off
    B:useFlanSpecialCase=true
}


general {
    # How difficult the crafting recipes are, from 0 - 2 (very easy to hard), values outside this range make most stuff uncraftable
    I:craftingDifficulty=0

    # Whether or not the radar and shield are free to use, i.e. do not require RF
    B:freeRadar=false

    # How many mud-checks are done per tick, 0 turns mud off
    I:mudRate=10
}


logging {
    # Enables the HFR powerlogging(tm) feature which prints a shitton of debugging information
    B:hfrExtendedLogging=false
}


missile {
    # Targeting delay of the AB missile in ticks. The AB will fly straight up ignoring missiles until this much time has passed.
    I:antiBallisticDelay=40

    # The detection range of the AB missile.
    I:antiBallisticRange=500

    # The speed of an AB after a target has been found
    D:antiBallisticSpeed=0.125

    # What blocks can block fire blasts (default: obsidian, concrete, concrete bricks, vault door, vault door dummy)
    S:blastShields <
        49
        2562
        2563
        2586
        2587
     >

    # How long machines will stay disabled after EMP strike
    I:empDuration=6000

    # Whether or not the EMP should use a special function to properly set all machine's RF to 0
    B:empHFSpecialFunction=true

    # The average delay between spark particles of disabled machines. Should be above 10. 0 will crash the game, so don't do that.
    I:empParticleDelay=20

    # The radius of the EMP effect
    I:empRange=100

    # How long the fire blast will last
    I:fireDuration=80

    # How many ticks the mushroom cloud will persist
    I:fireballLife=300

    # Scale of the mushroom cloud
    I:fireballScale=80

    # How much RF is required for a rocket launch. Has to be smaller or equal to the buffer size.
    I:launchPadRequirement=50000000

    # The amount of RF the launch pad can hold.
    I:launchPadStorage=100000000

    # How much beating a missile can take before it goes to commit unlive.
    I:missileHealth=15

    # Altitude at which cheapo missiles despawn and teleport to the target
    I:simpleMissileDespawn=5000

    # Altitude at which cheapo missiles spawn in when teleporting
    I:simpleMissileSpawn=6000

    # Blast radius(c) of tier 1 missiles
    I:tier1Blast=50

    # How much damage a tier 1 death blast does per tick
    I:tier1Damage=100

    # Blast radius(c) of tier 2 missiles
    I:tier2Blast=100

    # How much damage a tier 2 death blast does per tick
    I:tier2Damage=100

    # Blast radius(c) of tier 3 missiles
    I:tier3Blast=150

    # How much damage a tier 3 death blast does per tick
    I:tier3Damage=1000
}


nuke {
    # How much damage a nuclear death blast does per tick
    I:nukeDamage=1000

    # Radius of a nuke's death blast effect
    I:nukeKillRadius=250

    # Maximum radius of a nuclear explosion
    I:nukeRadius=100

    # Simple mode causes the explosion to be totally flat, saving on CPU power
    B:nukeSimple=false

    # How many blocks between explosions per destruction ring
    I:nukeSpacing=5

    # How many blocks between destruction rings
    I:nukeStep=5

    # Maximum radius of a nuclear explosion
    D:nukeStrength=5.0
}


radar {
    # Whether FMU+ radars should be enabled (disable to fix retarded crashes with McHeli)
    B:FxR_enableRadar=false

    # Minimum altitude for flans planes' radars to work
    I:FxR_planeAltitude=40

    # Y-axis offset from where the "is below roof" measurement is taken (to avoid ship radars from breaking)
    I:FxR_radarYOffset=2

    # Minimum altitude for flans non-planes' radars to work
    I:FxR_tankAltitude=30

    # Whether or not the radar uses a comparator to output it's signal, will directly output otherwise
    B:comparatorOutput=false

    # Y height required for the radar to work
    I:radarAltitude=55

    # How high entities have to be above the radar to be detected
    I:radarBuffer=30

    # Amount of RF per tick required for the radar to work
    I:radarConsumptionNew=2000

    # Whether or not the radar makes frequent pinging sounds
    B:radarPing=true

    # Range of the radar, 50 will result in 100x100 block area covered
    I:radarRange=1000
}


railgun {
    # How much damage a naval cannon death blast does per tick
    I:navalDamage=100

    # How much RF the railgun can store
    I:railgunBuffer=500000000

    # How much RF the railgun requires per shot
    I:railgunConsumption=250000000

    # How much damage a railgun death blast does per tick
    I:railgunDamage=1000
}


refinery {
    # How much energy the refinery can store
    I:refineryBuffer=100000

    # How much energy the refinery uses per tick
    I:refineryConsumption=1000

    # How much crude oil the refinery consumes per tick
    I:refineryOilConsumption=50

    # How much diesel the refinery creates per tick
    I:refineryOil_Diesel=15

    # How much bunker fuel the refinery creates per tick
    I:refineryOil_Heavy=20

    # How much kerosene the refinery creates per tick
    I:refineryOil_Kerosene=10

    # How much petroleum the refinery creates per tick
    I:refineryOil_Petroleum=5
}


skeleton {
    # How powerful exploding arrows are
    D:arrowStrength=1.5

    # Whether or not skeleton arrows should be explosive
    B:explosiveArrows=false
}


stockmarket {
    # Whether small econ fall messages should be broadcasted
    B:d1enable=true

    # Broadcast for small econ falls, %s replaces company short
    S:d1messages <
        %s's newest product was poorly received.
        %s lost a lawsuit over a faulty product.
     >

    # Whether econ fall messages should be broadcasted
    B:d2enable=true

    # Broadcast for econ falls, %s replaces company short
    S:d2messages <
        %s's newest product was an utter flop.
        Public outrage after a poor advertising campaign made by %s.
     >

    # Enables the stock market
    B:enableStocks=true

    # How many shares a player can own per stock
    I:stockCap=50

    # NAME:SHORTNAME:STARTING VALUE:U2CHANCE:U1CHANCE:NCHANCE:D1CHANCE:D2CHANCE
    S:stocks <
        Bobcum Motors:CUM:50:2.5:7.5:10:7.5:2.5
        Bingus International:BIN:50:2.5:7.5:10:7.5:2.5
        Spark Corporation:SPK:50:2.5:7.5:10:7.5:2.5
        FlimFlam Industries:FLIM:50:2.5:7.5:10:7.5:2.5
        Magpie Electricals:MAG:50:2.5:7.5:10:7.5:2.5
        Papa G Softworks:PAPA:50:2.5:7.5:10:7.5:2.5
     >

    # Whether small econ boost messages should be broadcasted
    B:u1enable=true

    # Broadcast for small econ boosts, %s replaces company short
    S:u1messages <
        %s's newest product was featured in a famous television show!
        Customer ratings for %s's services are on the rise!
     >

    # Whether econ boost messages should be broadcasted
    B:u2enable=true

    # Broadcast for econ boosts, %s replaces company short
    S:u2messages <
        %s's newest product proved to be a smash hit!
        %s is doing very well this quarter!
     >

    # Time in seconds between market updates
    I:updateInterval=600
}


temple {
    # Average amount of seconds for temple to generate scrolls
    I:templeRate=1800
}


university {
    # Average amount of seconds for uni to get jammed
    I:uniJamRate=900

    # Average amount of seconds for uni to generate research
    I:uniRate=180
}


watermill {
    # How much RF the water mill produces per tick
    I:watermillProduction=100
}


windturbine {
    # How much RF the wind turbine produces per tick
    I:windturbineProduction=500
}


world {
    # Chance for coal when stone is mined
    D:coalChance=0.04

    # Chance for gold when stone is mined
    D:goldChance=0.01

    # Chance for iron when stone is mined
    D:ironChance=0.05
}


worldborder {
    # The width of the warning area
    I:borderBuffer=100

    # World border in the negative X direction
    I:borderNegX=-10000

    # World border in the negative Z direction
    I:borderNegZ=-10000

    # World border in the positive X direction
    I:borderPosX=10000

    # World border in the positive Z direction
    I:borderPosZ=10000

    # Toggles the world border
    B:enableBorder=false
}


zombie {
    # What blocks can't be griefed by zomberts (syntax: [shortname])
    S:griefableBlacklist <
        dirt
        grass
        planks
        cobblestone
     >
}


